
import java.awt.Font;
import java.util.Arrays;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author aleksph
 */
public class TableSort extends javax.swing.JFrame {

    /**
     * Creates new form SortList
     */
    DefaultTableModel model;
    LoginMenu objLog;
    
     //objLog;
    public TableSort() {
        initComponents();
        String awd= "awdawdaw";
        //  jTable1.addColumn(awd);
        int[] clientsMoney = {1,2,3,4,5,6,7,8,9,10};

        String data1 = "adwaw";
        String data2 = "awdawdaw";
        String data3 = "awdawdawdawd";
        String data4 = "aojmfgjaespjpogesj";
        String data5 = "awd90a9wuid09";
        
        objLog = new LoginMenu();
        
         //row;
        
        txtFilterText.setFont(new Font("Serif", Font.ROMAN_BASELINE, 28));
        
        //Object[] col = { data5 };
        tableClientSort.getColumnModel().getColumn(0).setHeaderValue("Name");
        tableClientSort.getColumnModel().getColumn(1).setHeaderValue("Surname");
        tableClientSort.getColumnModel().getColumn(2).setHeaderValue("Kredit - лв.");
        tableClientSort.getColumnModel().getColumn(3).setHeaderValue("Money - лв.");
        
        model = (DefaultTableModel) tableClientSort.getModel();
        //model.setTitle("awdawd");
        
        objLog.clients.getElement(2);
        SAAS obj = new SAAS();
        for(int i = 0; i < objLog.clients.getSize(); i++){
            Object[] row = { objLog.clients.getElement(i).getName(), objLog.clients.getElement(i).getSurName(), objLog.clients.getElement(i).getKredit()+" лв.", LoginMenu.clients.getElement(i).getMoney() + " лв."};
            model.addRow(row);    
            //  model.setValueAt("Pate", 3, 4);

        }
        

        //model.addColumn(row);
        


      //DefaultTableModel  model = new DefaultTableModel();
      //tableClientSort.
      //tableClientSort.addColumn("COl1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableClientSort = new javax.swing.JTable();
        btnSortByKreditUp = new javax.swing.JButton();
        btnSortByKreditDown = new javax.swing.JButton();
        btnSortByMoneyUp = new javax.swing.JButton();
        btnSortByMoneyDown = new javax.swing.JButton();
        btnFilteByMoneyOver10000 = new javax.swing.JButton();
        txtFilterText = new javax.swing.JLabel();
        btnFilteByMoneyUnder10000 = new javax.swing.JButton();
        btnFilterByMoneyKredit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(20, 59, 121));

        tableClientSort.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableClientSort);

        btnSortByKreditUp.setText("Sort By Kredit - Down");
        btnSortByKreditUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByKreditUpActionPerformed(evt);
            }
        });

        btnSortByKreditDown.setText("Sort By Kredit - Down");
        btnSortByKreditDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByKreditDownActionPerformed(evt);
            }
        });

        btnSortByMoneyUp.setText("Sort By Money - Up");
        btnSortByMoneyUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByMoneyUpActionPerformed(evt);
            }
        });

        btnSortByMoneyDown.setText("Sort By Money - Down");
        btnSortByMoneyDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByMoneyDownActionPerformed(evt);
            }
        });

        btnFilteByMoneyOver10000.setText("Filter By money - over 10 000l лв.");

        txtFilterText.setForeground(new java.awt.Color(255, 255, 255));
        txtFilterText.setText("Filter data");

        btnFilteByMoneyUnder10000.setText("Filter By money - under 10 000l лв.");
        btnFilteByMoneyUnder10000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilteByMoneyUnder10000ActionPerformed(evt);
            }
        });

        btnFilterByMoneyKredit.setText("Sort By Money - Down");
        btnFilterByMoneyKredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterByMoneyKreditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSortByKreditUp)
                        .addGap(76, 76, 76)
                        .addComponent(btnSortByKreditDown)
                        .addGap(46, 46, 46)
                        .addComponent(btnSortByMoneyUp))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnSortByMoneyDown)
                        .addGap(18, 18, 18)
                        .addComponent(btnFilteByMoneyOver10000)
                        .addGap(18, 18, 18)
                        .addComponent(btnFilteByMoneyUnder10000)))
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(btnFilterByMoneyKredit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(txtFilterText)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFilterText)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortByKreditUp)
                    .addComponent(btnSortByKreditDown)
                    .addComponent(btnSortByMoneyUp))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFilteByMoneyOver10000)
                    .addComponent(btnFilteByMoneyUnder10000)
                    .addComponent(btnSortByMoneyDown))
                .addGap(18, 18, 18)
                .addComponent(btnFilterByMoneyKredit)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispose();
        new SAAS().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void btnSortByMoneyUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByMoneyUpActionPerformed
        // TODO add your handling code here:
        int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }

        Client streamTransferArr[] = new Client[objLog.clients.getSize()];

        int i = 0;

        /*while(i < objLog.clients.getSize()){

            streamTransferArr[i] = objLog.clients.getElement(i);

            System.out.println("array: " + streamTransferArr[i]);       

            i++;

        }*/
        
        /*Client result[] = Arrays.stream(streamTransferArr)
                    .filter(n - > n.getMoney() > 10000)
                    .toArray(Client[]::new);*/
        objLog.clients.sortCreditsMoney(2);
        DynamicArray object = new DynamicArray();
        System.out.println("filled"+object.filled);
        
        for(int k = 0; k < objLog.clients.getSize(); k++){
            Object[] row = { objLog.clients.getElement(k).getName(), objLog.clients.getElement(i).getSurName(), objLog.clients.getElement(i).getKredit()+" лв.", LoginMenu.clients.getElement(i).getMoney() + " лв."};
            model.addRow(row);    

        }

    }//GEN-LAST:event_btnSortByMoneyUpActionPerformed

    private void btnSortByKreditUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByKreditUpActionPerformed
        // TODO add your handling code here:
                int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }
    }//GEN-LAST:event_btnSortByKreditUpActionPerformed

    private void btnSortByKreditDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByKreditDownActionPerformed
        // TODO add your handling code here:
                int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }
    }//GEN-LAST:event_btnSortByKreditDownActionPerformed

    private void btnSortByMoneyDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByMoneyDownActionPerformed
        // TODO add your handling code here:
                int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }
    }//GEN-LAST:event_btnSortByMoneyDownActionPerformed

    private void btnFilteByMoneyUnder10000ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilteByMoneyUnder10000ActionPerformed
        // TODO add your handling code here:
                int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }
    }//GEN-LAST:event_btnFilteByMoneyUnder10000ActionPerformed

    private void btnFilterByMoneyKreditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterByMoneyKreditActionPerformed
        // TODO add your handling code here:
                int rowCount = model.getRowCount();

        for (int j = rowCount - 1; j >= 0; j--) {
                model.removeRow(j);
        }
    }//GEN-LAST:event_btnFilterByMoneyKreditActionPerformed

    /**
     * @param args the command line arguments
     */
  
    private void formWindowClose(java.awt.event.WindowEvent evt){
       // this.dispose();
        //new SAAS().setVisible(true);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableSort().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilteByMoneyOver10000;
    private javax.swing.JButton btnFilteByMoneyUnder10000;
    private javax.swing.JButton btnFilterByMoneyKredit;
    private javax.swing.JButton btnSortByKreditDown;
    private javax.swing.JButton btnSortByKreditUp;
    private javax.swing.JButton btnSortByMoneyDown;
    private javax.swing.JButton btnSortByMoneyUp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableClientSort;
    private javax.swing.JLabel txtFilterText;
    // End of variables declaration//GEN-END:variables
}
